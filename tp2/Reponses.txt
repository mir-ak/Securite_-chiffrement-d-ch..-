
"""---------------------------------------Exercice 1 -------------------------------------------------------------------------------------"""
=> tp2.py

"""---------------------------------------Exercice 2 -------------------------------------------------------------------------------------"""

qst 1 
=> A Chiffrement la clé publique de alic (Ap)
=> B Déchiffrement la clé privée de alic (As)
qst 2  
=> L’exponentiation modulo
   exemple  
     Chiffrement :x7−→x3(mod 100),

"""---------------------------------------Exercice 3 -------------------------------------------------------------------------------------"""

qst 1 
a => clé privée de bob
b => cle publique de bob
qst 2 Quelle est la procédure de signature et quelle est la forme du message signé
exemple 
 alice choisit :
    un chiffrement asymétrique constitué d'une fonction de chiffrement C et d'une fonction de déchiffrement D ;
    une fonction de hachage que nous noterons H.
 Pour le chiffrement choisi, Alice a généré une clé privée Kpr et une clé publique Kpb :
    elle transmet la clé publique Kpb et la fonction de hachage H à Bob par un canal non sécurisé ;
    elle garde la clé privée Kpr secrète.
 
=> la forme du message signé :numérique

"""---------------------------------------Exercice 4 -------------------------------------------------------------------------------------"""

qst1
elle peut permettre à un attaquant de modifier 
le contenus de messages. Pour l'illustration
exemple 
a = rsa(15,A_prive)
b = rsa(3,a_public)
a*b
du coup le multiple de deux chiffrés on aura un chiffres valide du coup on peut déchiffrer le message 

qst2
exemple alic envois chaque une minute la meme chose a bob si y chiffrement qui envois tout le temp la meme chose 
on peut voir dans chaque minute du coup on peut envoyer ca aussi et ça c'est une malléabilité

